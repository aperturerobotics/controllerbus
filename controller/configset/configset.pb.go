// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/controllerbus/controller/configset/configset.proto

package configset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ConfigSet is a set of uniquely identified controllers to be executed.
// ConfigSets can be loaded from configuration files, or other sources. The
// ConfigSet controller merges all desired ConfigSets together and executes the
// resultant set.
type ConfigSet struct {
	// ControllerConfigs contains the mapping of unique controller ID to
	// configuration object.
	ControllerConfigs    map[string]*ControllerConfig `protobuf:"bytes,1,rep,name=controller_configs,json=controllerConfigs" json:"controller_configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ConfigSet) Reset()         { *m = ConfigSet{} }
func (m *ConfigSet) String() string { return proto.CompactTextString(m) }
func (*ConfigSet) ProtoMessage()    {}
func (*ConfigSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_configset_ba1bd21bab65fbee, []int{0}
}
func (m *ConfigSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSet.Unmarshal(m, b)
}
func (m *ConfigSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSet.Marshal(b, m, deterministic)
}
func (dst *ConfigSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSet.Merge(dst, src)
}
func (m *ConfigSet) XXX_Size() int {
	return xxx_messageInfo_ConfigSet.Size(m)
}
func (m *ConfigSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSet.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSet proto.InternalMessageInfo

func (m *ConfigSet) GetControllerConfigs() map[string]*ControllerConfig {
	if m != nil {
		return m.ControllerConfigs
	}
	return nil
}

// ControllerConfig contains an encoded controllerbus config object.
type ControllerConfig struct {
	// ConfigId is the configuration ID. This will be used to construct the
	// appropriate config object on the heap.
	ConfigId string `protobuf:"bytes,1,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	// Data is the encoded protobuf configuration object.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Revision is the revision number of the configuration.
	// Higher revision numbers take precedence.
	Revision             uint64   `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerConfig) Reset()         { *m = ControllerConfig{} }
func (m *ControllerConfig) String() string { return proto.CompactTextString(m) }
func (*ControllerConfig) ProtoMessage()    {}
func (*ControllerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_configset_ba1bd21bab65fbee, []int{1}
}
func (m *ControllerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerConfig.Unmarshal(m, b)
}
func (m *ControllerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerConfig.Marshal(b, m, deterministic)
}
func (dst *ControllerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfig.Merge(dst, src)
}
func (m *ControllerConfig) XXX_Size() int {
	return xxx_messageInfo_ControllerConfig.Size(m)
}
func (m *ControllerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfig proto.InternalMessageInfo

func (m *ControllerConfig) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *ControllerConfig) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ControllerConfig) GetRevision() uint64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfigSet)(nil), "configset.ConfigSet")
	proto.RegisterMapType((map[string]*ControllerConfig)(nil), "configset.ConfigSet.ControllerConfigsEntry")
	proto.RegisterType((*ControllerConfig)(nil), "configset.ControllerConfig")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/controllerbus/controller/configset/configset.proto", fileDescriptor_configset_ba1bd21bab65fbee)
}

var fileDescriptor_configset_ba1bd21bab65fbee = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xd9, 0xa6, 0x4a, 0x33, 0xf5, 0x50, 0xe7, 0x20, 0xa1, 0xbd, 0x84, 0x9e, 0x02, 0x42,
	0x8a, 0xf5, 0x22, 0x5e, 0xc5, 0x83, 0x17, 0x0f, 0xeb, 0xcd, 0x4b, 0xd8, 0x24, 0x6b, 0x5d, 0x8c,
	0x99, 0x32, 0x99, 0x14, 0xfa, 0x15, 0xfd, 0x54, 0x92, 0x3f, 0x24, 0xb6, 0x78, 0xfb, 0xbd, 0xb7,
	0x6f, 0xdf, 0x63, 0x17, 0x5e, 0x77, 0x4e, 0x3e, 0xeb, 0x34, 0xce, 0xe8, 0x7b, 0x63, 0xf6, 0x96,
	0xa5, 0x66, 0xcb, 0x94, 0x92, 0xb8, 0xac, 0xda, 0x64, 0x54, 0x0a, 0x53, 0x51, 0x58, 0x4e, 0xeb,
	0xbf, 0xaa, 0xc1, 0x0f, 0xb7, 0xab, 0xac, 0x8c, 0x14, 0xef, 0x99, 0x84, 0xd0, 0x1f, 0x8c, 0xf5,
	0x8f, 0x02, 0xff, 0xa9, 0x55, 0x6f, 0x56, 0xf0, 0x1d, 0x70, 0x2c, 0x48, 0xfa, 0x54, 0xa0, 0x42,
	0x2f, 0x9a, 0x6f, 0x6f, 0xe3, 0xb1, 0x66, 0xb8, 0xd1, 0x50, 0x1f, 0xef, 0xbc, 0xea, 0xb9, 0x14,
	0x3e, 0xea, 0xeb, 0xec, 0xdc, 0x5f, 0x1a, 0xb8, 0xf9, 0x3f, 0x8c, 0x0b, 0xf0, 0xbe, 0xec, 0x31,
	0x50, 0xa1, 0x8a, 0x7c, 0xdd, 0x20, 0xde, 0xc1, 0xc5, 0xc1, 0x14, 0xb5, 0x0d, 0x26, 0xa1, 0x8a,
	0xe6, 0xdb, 0xd5, 0xe9, 0xf4, 0x49, 0x87, 0xee, 0x92, 0x8f, 0x93, 0x07, 0xb5, 0x4e, 0x60, 0x71,
	0x7e, 0x8c, 0x2b, 0xe8, 0x5f, 0x9b, 0xb8, 0xbc, 0x9f, 0x98, 0x75, 0xc6, 0x4b, 0x8e, 0x08, 0xd3,
	0xdc, 0x88, 0x69, 0x67, 0xae, 0x74, 0xcb, 0xb8, 0x84, 0x19, 0xdb, 0x83, 0xab, 0x1c, 0x95, 0x81,
	0x17, 0xaa, 0x68, 0xaa, 0x07, 0x9d, 0x5e, 0xb6, 0xff, 0x77, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x82, 0x77, 0xba, 0xef, 0x91, 0x01, 0x00, 0x00,
}
