// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/controllerbus/example/hello-world/controller.proto (package main, syntax proto3)
/* eslint-disable */

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf'
import { Message, proto3 } from '@bufbuild/protobuf'

/**
 * ToyControllerConfig contains configuration for the toy controller.
 *
 * @generated from message main.ToyControllerConfig
 */
export class ToyControllerConfig extends Message<ToyControllerConfig> {
  /**
   * Name is the name to say hello to.
   *
   * @generated from field: string name = 1;
   */
  name = ''

  constructor(data?: PartialMessage<ToyControllerConfig>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'main.ToyControllerConfig'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'name', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ToyControllerConfig {
    return new ToyControllerConfig().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ToyControllerConfig {
    return new ToyControllerConfig().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ToyControllerConfig {
    return new ToyControllerConfig().fromJsonString(jsonString, options)
  }

  static equals(
    a: ToyControllerConfig | PlainMessage<ToyControllerConfig> | undefined,
    b: ToyControllerConfig | PlainMessage<ToyControllerConfig> | undefined,
  ): boolean {
    return proto3.util.equals(ToyControllerConfig, a, b)
  }
}
