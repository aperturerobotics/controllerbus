// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/controllerbus/directive/directive.proto

package directive

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DirectiveInfo contains directive information in protobuf form.
type DirectiveInfo struct {
	// Name is the directive name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// DebugVals contains the directive debug values.
	DebugVals            []*ProtoDebugValue `protobuf:"bytes,2,rep,name=debug_vals,json=debugVals,proto3" json:"debug_vals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DirectiveInfo) Reset()         { *m = DirectiveInfo{} }
func (m *DirectiveInfo) String() string { return proto.CompactTextString(m) }
func (*DirectiveInfo) ProtoMessage()    {}
func (*DirectiveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d98916a9b181ba6, []int{0}
}

func (m *DirectiveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectiveInfo.Unmarshal(m, b)
}
func (m *DirectiveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectiveInfo.Marshal(b, m, deterministic)
}
func (m *DirectiveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectiveInfo.Merge(m, src)
}
func (m *DirectiveInfo) XXX_Size() int {
	return xxx_messageInfo_DirectiveInfo.Size(m)
}
func (m *DirectiveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectiveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DirectiveInfo proto.InternalMessageInfo

func (m *DirectiveInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DirectiveInfo) GetDebugVals() []*ProtoDebugValue {
	if m != nil {
		return m.DebugVals
	}
	return nil
}

// DirectiveState contains directive info and state info in protobuf form.
type DirectiveState struct {
	// Info is the directive info.
	Info                 *DirectiveInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DirectiveState) Reset()         { *m = DirectiveState{} }
func (m *DirectiveState) String() string { return proto.CompactTextString(m) }
func (*DirectiveState) ProtoMessage()    {}
func (*DirectiveState) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d98916a9b181ba6, []int{1}
}

func (m *DirectiveState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectiveState.Unmarshal(m, b)
}
func (m *DirectiveState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectiveState.Marshal(b, m, deterministic)
}
func (m *DirectiveState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectiveState.Merge(m, src)
}
func (m *DirectiveState) XXX_Size() int {
	return xxx_messageInfo_DirectiveState.Size(m)
}
func (m *DirectiveState) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectiveState.DiscardUnknown(m)
}

var xxx_messageInfo_DirectiveState proto.InternalMessageInfo

func (m *DirectiveState) GetInfo() *DirectiveInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// ProtoDebugValue is a debug value.
type ProtoDebugValue struct {
	// Key is the debug value key.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Values are the debug value values.
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoDebugValue) Reset()         { *m = ProtoDebugValue{} }
func (m *ProtoDebugValue) String() string { return proto.CompactTextString(m) }
func (*ProtoDebugValue) ProtoMessage()    {}
func (*ProtoDebugValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d98916a9b181ba6, []int{2}
}

func (m *ProtoDebugValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoDebugValue.Unmarshal(m, b)
}
func (m *ProtoDebugValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoDebugValue.Marshal(b, m, deterministic)
}
func (m *ProtoDebugValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoDebugValue.Merge(m, src)
}
func (m *ProtoDebugValue) XXX_Size() int {
	return xxx_messageInfo_ProtoDebugValue.Size(m)
}
func (m *ProtoDebugValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoDebugValue.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoDebugValue proto.InternalMessageInfo

func (m *ProtoDebugValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ProtoDebugValue) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*DirectiveInfo)(nil), "directive.DirectiveInfo")
	proto.RegisterType((*DirectiveState)(nil), "directive.DirectiveState")
	proto.RegisterType((*ProtoDebugValue)(nil), "directive.ProtoDebugValue")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/controllerbus/directive/directive.proto", fileDescriptor_7d98916a9b181ba6)
}

var fileDescriptor_7d98916a9b181ba6 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xcf, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xa9, 0x2d, 0x85, 0x9d, 0xe2, 0x0f, 0x72, 0x90, 0xc5, 0x53, 0xd9, 0x53, 0x0f, 0xb2,
	0x0b, 0xf5, 0x24, 0x82, 0x17, 0x7b, 0xf1, 0x26, 0x2b, 0x78, 0x54, 0x92, 0xec, 0xb4, 0x06, 0xd3,
	0x4c, 0x49, 0x26, 0x0b, 0xfe, 0xf7, 0x92, 0xb8, 0x76, 0xd5, 0xdb, 0xf7, 0x92, 0xc7, 0x97, 0x17,
	0x78, 0xd8, 0x19, 0x7e, 0x8f, 0xaa, 0xd6, 0xb4, 0x6f, 0xe4, 0x01, 0x3d, 0x47, 0x8f, 0x9e, 0x14,
	0xb1, 0xd1, 0xa1, 0xd1, 0xe4, 0xd8, 0x93, 0xb5, 0xe8, 0x55, 0x0c, 0x4d, 0x67, 0x3c, 0x6a, 0x36,
	0x3d, 0x8e, 0x54, 0x1f, 0x3c, 0x31, 0x89, 0xe2, 0x78, 0x50, 0xbd, 0xc2, 0xe9, 0xe6, 0x27, 0x3c,
	0xba, 0x2d, 0x09, 0x01, 0x33, 0x27, 0xf7, 0x58, 0x4e, 0x96, 0x93, 0x55, 0xd1, 0x66, 0x16, 0xb7,
	0x00, 0x1d, 0xaa, 0xb8, 0x7b, 0xeb, 0xa5, 0x0d, 0xe5, 0xc9, 0x72, 0xba, 0x5a, 0xac, 0xaf, 0xea,
	0xd1, 0xfa, 0x94, 0xac, 0x9b, 0xd4, 0x78, 0x91, 0x36, 0x62, 0x5b, 0x74, 0x03, 0x87, 0xea, 0x1e,
	0xce, 0x8e, 0xfe, 0x67, 0x96, 0x8c, 0xe2, 0x1a, 0x66, 0xc6, 0x6d, 0x29, 0x3f, 0xb0, 0x58, 0x97,
	0xbf, 0x34, 0x7f, 0x86, 0xb4, 0xb9, 0x55, 0xdd, 0xc1, 0xf9, 0x3f, 0xbb, 0xb8, 0x80, 0xe9, 0x07,
	0x7e, 0x0e, 0x03, 0x13, 0x8a, 0x4b, 0x98, 0xf7, 0xe9, 0xea, 0x7b, 0x5b, 0xd1, 0x0e, 0x49, 0xcd,
	0xf3, 0x77, 0x6f, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x70, 0x12, 0x82, 0x35, 0x01, 0x00,
	0x00,
}
