#+TITLE: Controller Bus

* Introduction

This repository describes and implements an approach (the "Controller Model") to
developing software components as communicating sequential processes, like
microservices, that dynamically link together via plugin loading or
inter-process communication.

A controller can be in-process, compiled with the bus, or it could be loaded
from a plugin (dynamically linked).

* Design Motivations

** Modularity

Components are declared as concrete interface types in Go, and implemented by
dynamically-linked or statically-linked code. The controller model provides an
easy path to move between the static and dynamically linked approach. ggj

** Distribution

Components and controllers could be distributed as signed binaries, like
"micro-apps," over the air, providing functionality defined by common interface
contracts.

** Licensing

Controller Bus allows for a static-linking restrictive software license friendly
approach. GPL and other open source licenses require software statically linked
to the open source work to also be open sourced; however, dynamically linking to
the library requires only that the modified library source be released.

Typically, Go programs are statically linked into a single binary. This would
usually require that any GPL-licensed software used in the Go work would also
need to be open-sourced:

#+BEGIN_QUOTE
If you dynamically link against an LGPL'd library already present on the user's
computer, you need not convey the library's source. On the other hand, if you
yourself convey the executable LGPL'd library along with your application,
whether linked with statically or dynamically, you must also convey the
library's sources, in one of the ways for which the LGPL provides.
#+END_QUOTE

In other words, if we statically link with a library, we must provide the entire
application's source. If we dynamically link with a library by loading it as a
plugin, then the modified library source and the plugin wrapper's source must be
disclosed, but not the "plugin loader" application source.
